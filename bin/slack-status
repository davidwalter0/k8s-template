#!/bin/bash

debug=0

function usage
{
    echo ${0##*/} --step=step-text --rc=return-code --gitlab-user=user --gitlab-host=host-or-ip  --gitlab-port=port --slack-url=url-for-secret
    exit 3
}

dir=$(dirname $(readlink -f ${0}))
short=${dir%/*}
short=${short##*/}
gitlab_host=128.107.15.211
gitlab_port=80
gitlab_user=davidwalter0
slack_url=http://slack-config/slackurl

slack_tmp=$(mktemp /tmp/slack-url.XXXX)
json=$(mktemp)

function setup
{
    gitlabhost=128.107.15.211
    gitlab_user=root
    slack_url=http://slack-config/slackurl
    for arg in ${@}; do
        case ${arg} in
            --step=*)
                step=${arg##*=}
                ;;
            --rc=*)
                status=${arg##*=}
                case ${status} in
                    0)
                        status=success
                        color=good
                        ;;
                    1)
                        status=warning
                        color=warning
                        ;;
                    2)
                        status=error
                        color=danger
                        ;;
                    3)
                        color=danger
                        status="process or sequence error"
                        ;;
                esac
                ;;
            --gitlab-host=*)
                gitlab_host=${arg##*=}
                ;;
            --gitlab-port=*)
                gitlab_port=${arg##*=}
                ;;
            --gitlab-user=*)
                gitlab_user=${arg##*=}
                ;;
            --slack-url=*)
                slack_url=${arg##*=}
                ;;
            --debug)
                debug=1
                ;;
            *)
                usage
        esac
    done
}

function main
{
    setup ${@}
    if (( debug )) ; then
        ssh k8s-node-02 curl --silent ${slack_url} > ${slack_tmp}
    else
        curl --silent --output ${slack_tmp} ${slack_url}
    fi
    chmod 600 ${slack_tmp}
    if [[ -e ${slack_tmp} ]]; then
        for url in $(cat ${slack_tmp}); do
            # "color": "#36a64f", // Can either be one of 'good', 'warning', 'danger', or any hex color code
            # - color: "#D00000"

            cat > ${json}.yaml <<EOF
attachments:                                                                                                        
- color: "${color}"
  user: Gitlab-CI
  fallback: |
     <http://${gitlab_host}:${gitlab_port}/${gitlab_user}/${short}/builds|${short} step: ${step} status: ${status}>
  fields:                                                                                   
    - short: false                  
      # title: "<http://${gitlab_host}:${gitlab_port}/${gitlab_user}/builds|${short} step: ${step} status: ${status}>"
      value: |
        <http://${gitlab_host}:${gitlab_port}/${gitlab_user}/${short}/builds|${short} step: ${step} status: ${status}>
  # pretext: |
  #   <http://${gitlab_host}:${gitlab_port}/${gitlab_user}/${short}/builds|${short} step: ${step} status: ${status}>
EOF
            if (( debug )); then
                echo "docker run --rm --interactive k8s-docker-registry:5000/yaml2json2yaml:latest /bin/yaml2json --compress < ${json}.yaml > ${json}"
            fi
            docker run --rm --interactive k8s-docker-registry:5000/yaml2json2yaml:latest /bin/yaml2json --compress < ${json}.yaml > ${json}

            # if (( debug )); then
            #     echo "bin/yaml2json --compress < ${json}.yaml > ${json}"
            # fi

            # bin/yaml2json --compress < ${json}.yaml > ${json}

            if (( debug )) ; then
                echo "curl --silent ${url} -d@\"${json}\""
            fi
            curl --silent ${url} -d@"${json}"
        done
    fi

    if (( debug )); then
        echo rm -f ${json}{,.yaml} ${slackurl}
        cat ${json}
    else
        rm -f ${json}{,.yaml} ${slackurl}
    fi
}

main ${@}
exit ${rc}
